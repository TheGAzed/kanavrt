@using kanavrt.Model
@using kanavrt.Model.Settings.Grid.Table

@inherits AbstractTableView

@code {
	AbstractTableModel letters = new DigraphTableModel();
}

@{
	int index = 0;
}

<table id="character-set-table">
	<tr id="character-line-one" class="character-line">
		<td class="character-data" id="diacritic-toggle-data">
			<InputCheckbox Value='@isDiacritic' ValueExpression='() => isDiacritic' ValueChanged='(bool c) => toggleDiacritic(c)' id="diacritic-toggle-label" class="toggle-input special-toggle-input" style="display: none;" />
			<label for="diacritic-toggle-label" id="diacritic-toggle-label" class="toggle-label special-toggle-label">^</label>
		</td>

		<td class="character-data vowel-data" id="YA-line-toggle-data">
			<InputCheckbox Value='@lineVowelsState(letters, 0)' ValueExpression='() => letters.VowelsLineLookup[0]' ValueChanged='(bool c) => toggleVowelsLine(letters, c, 0)' id='YA-line-toggle-input' class="toggle-input special-toggle-input" style="display: none;" />
			<label for="YA-line-toggle-input" id="YA-line-toggle-label" class="toggle-label special-toggle-label">YA</label>
		</td>

		<td class="character-data vowel-data" id="YU-line-toggle-data">
			<InputCheckbox Value='@lineVowelsState(letters, 1)' ValueExpression='() => letters.VowelsLineLookup[1]' ValueChanged='(bool c) => toggleVowelsLine(letters, c, 1)' id='YU-line-toggle-input' class="toggle-input special-toggle-input" style="display: none;" />
			<label for="YU-line-toggle-input" id="YU-line-toggle-label" class="toggle-label special-toggle-label">YU</label>
		</td>

		<td class="character-data vowel-data" id="YO-line-toggle-data">
			<InputCheckbox Value='@lineVowelsState(letters, 2)' ValueExpression='() => letters.VowelsLineLookup[2]' ValueChanged='(bool c) => toggleVowelsLine(letters, c, 2)' id='YO-line-toggle-input' class="toggle-input special-toggle-input" style="display: none;" />
			<label for="YO-line-toggle-input" id="YO-line-toggle-label" class="toggle-label special-toggle-label">YO</label>
		</td>
	</tr>

	<tr id="character-line-two" class="character-line">
		<td class="character-data" id="consonants-toggle-data">
			<InputCheckbox Value='@consonantsState(letters)' ValueExpression='() => letters.isConsonants' ValueChanged='(bool c) => toggleConsonants(letters, c)' id="consonants-toggle-label" class="toggle-input special-toggle-input" style="display: none;" />
			<label for="consonants-toggle-label" id="consonants-toggle-label" class="toggle-label special-toggle-label">c:</label>
		</td>
	</tr>

	<tr id="character-line-three" class="character-line">
		<td class="character-data" id="K-line-toggle-data">
			<InputCheckbox Value='@lineConsonantsState(letters, 0)' ValueExpression='() => letters.ConsonantsLineLookup[0]' ValueChanged='(bool c) => toggleConsonantsLine(letters, c, 0)' id="K-line-toggle-input" class="toggle-input special-toggle-input" style="display: none;" />
			<label for="K-line-toggle-input" id="K-line-toggle-label" class="toggle-label special-toggle-label">K</label>
		</td>


		@{
			string[] kLine = [ "KYA", "KYU", "KYO", ];
			index = 0;

			foreach (string kana in letters.ConsonantsLineSetLookup[0]) {
				int i = index;
				<td class="character-data character" id="@(kLine[i])-toggle-data">
					<input type="checkbox" name="@(kLine[i])-toggle-label" value="" checked="@characterState(kana)" id="@(kLine[i])-toggle-label" class="toggle-input character-toggle-input" style="display: none;" @onclick='() => toggleCharacter(kana)' />
					<label for="@(kLine[i])-toggle-label" id="@(kLine[i])-toggle-label" class="toggle-label character-toggle-label">@kana</label>
				</td>

				index++;
			}
		}
	</tr>

	<tr id="character-line-four" class="character-line">
		<td class="character-data" id="S-line-toggle-data">
			<InputCheckbox Value='@lineConsonantsState(letters, 1)' ValueExpression='() => letters.ConsonantsLineLookup[1]' ValueChanged='(bool c) => toggleConsonantsLine(letters, c, 1)' id="S-line-toggle-input" class="toggle-input special-toggle-input" style="display: none;" />
			<label for="S-line-toggle-input" id="S-line-toggle-label" class="toggle-label special-toggle-label">S</label>
		</td>


		@{
			string[] sLine = ["SYA", "SYU", "SYO",];
			index = 0;

			foreach (string kana in letters.ConsonantsLineSetLookup[1]) {
				int i = index;
				<td class="character-data character" id="@(sLine[i])-toggle-data">
					<input type="checkbox" name="@(sLine[i])-toggle-label" value="" checked="@characterState(kana)" id="@(sLine[i])-toggle-label" class="toggle-input character-toggle-input" style="display: none;" @onclick='() => toggleCharacter(kana)' />
					<label for="@(sLine[i])-toggle-label" id="@(sLine[i])-toggle-label" class="toggle-label character-toggle-label">@kana</label>
				</td>

				index++;
			}
		}
	</tr>

	<tr id="character-line-five" class="character-line">
		<td class="character-data" id="T-line-toggle-data">
			<InputCheckbox Value='@lineConsonantsState(letters, 2)' ValueExpression='() => letters.ConsonantsLineLookup[2]' ValueChanged='(bool c) => toggleConsonantsLine(letters, c, 2)' id="T-line-toggle-input" class="toggle-input special-toggle-input" style="display: none;" />
			<label for="T-line-toggle-input" id="T-line-toggle-label" class="toggle-label special-toggle-label">T</label>
		</td>


		@{
			string[] tLine = ["TYA", "TYU", "TYO",];
			index = 0;

			foreach (string kana in letters.ConsonantsLineSetLookup[2]) {
				int i = index;
				<td class="character-data character" id="@(tLine[i])-toggle-data">
					<input type="checkbox" name="@(tLine[i])-toggle-label" value="" checked="@characterState(kana)" id="@(tLine[i])-toggle-label" class="toggle-input character-toggle-input" style="display: none;" @onclick='() => toggleCharacter(kana)' />
					<label for="@(tLine[i])-toggle-label" id="@(tLine[i])-toggle-label" class="toggle-label character-toggle-label">@kana</label>
				</td>

				index++;
			}
		}
	</tr>

	<tr id="character-line-six" class="character-line">
		<td class="character-data" id="N-line-toggle-data">
			<InputCheckbox Value='@lineConsonantsState(letters, 3)' ValueExpression='() => letters.ConsonantsLineLookup[3]' ValueChanged='(bool c) => toggleConsonantsLine(letters, c, 3)' id="N-line-toggle-input" class="toggle-input special-toggle-input" style="display: none;" />
			<label for="N-line-toggle-input" id="N-line-toggle-label" class="toggle-label special-toggle-label">N</label>
		</td>


		@{
			string[] nLine = ["NYA", "NYU", "NYO",];
			index = 0;

			foreach (string kana in letters.ConsonantsLineSetLookup[3]) {
				int i = index;
				<td class="character-data character" id="@(nLine[i])-toggle-data">
					<input type="checkbox" name="@(nLine[i])-toggle-label" value="" checked="@characterState(kana)" id="@(nLine[i])-toggle-label" class="toggle-input character-toggle-input" style="display: none;" @onclick='() => toggleCharacter(kana)' />
					<label for="@(nLine[i])-toggle-label" id="@(nLine[i])-toggle-label" class="toggle-label character-toggle-label">@kana</label>
				</td>

				index++;
			}
		}
	</tr>

	<tr id="character-line-seven" class="character-line">
		<td class="character-data" id="H-line-toggle-data">
			<InputCheckbox Value='@lineConsonantsState(letters, 4)' ValueExpression='() => letters.ConsonantsLineLookup[4]' ValueChanged='(bool c) => toggleConsonantsLine(letters, c, 4)' id="H-line-toggle-input" class="toggle-input special-toggle-input" style="display: none;" />
			<label for="H-line-toggle-input" id="H-line-toggle-label" class="toggle-label special-toggle-label">H</label>
		</td>


		@{
			string[] hLine = ["HYA", "HYU", "HYO",];
			index = 0;

			foreach (string kana in letters.ConsonantsLineSetLookup[4]) {
				int i = index;
				<td class="character-data character" id="@(hLine[i])-toggle-data">
					<input type="checkbox" name="@(hLine[i])-toggle-label" value="" checked="@characterState(kana)" id="@(hLine[i])-toggle-label" class="toggle-input character-toggle-input" style="display: none;" @onclick='() => toggleCharacter(kana)' />
					<label for="@(hLine[i])-toggle-label" id="@(hLine[i])-toggle-label" class="toggle-label character-toggle-label">@kana</label>
				</td>

				index++;
			}
		}
	</tr>

	<tr id="character-line-eight" class="character-line">

	</tr>

	<tr id="character-line-nine" class="character-line">
        <td class="character-data" id="M-line-toggle-data">
            <InputCheckbox Value='@lineConsonantsState(letters, 5)' ValueExpression='() => letters.ConsonantsLineLookup[5]' ValueChanged='(bool c) => toggleConsonantsLine(letters, c, 5)' id="M-line-toggle-input" class="toggle-input special-toggle-input" style="display: none;" />
            <label for="M-line-toggle-input" id="M-line-toggle-label" class="toggle-label special-toggle-label">M</label>
        </td>


        @{
            string[] mLine = ["MYA", "MYU", "MYO",];
            index = 0;

            foreach (string kana in letters.ConsonantsLineSetLookup[5]) {
                int i = index;
                <td class="character-data character" id="@(mLine[i])-toggle-data">
                    <input type="checkbox" name="@(mLine[i])-toggle-label" value="" checked="@characterState(kana)" id="@(mLine[i])-toggle-label" class="toggle-input character-toggle-input" style="display: none;" @onclick='() => toggleCharacter(kana)' />
                    <label for="@(mLine[i])-toggle-label" id="@(mLine[i])-toggle-label" class="toggle-label character-toggle-label">@kana</label>
                </td>

                index++;
            }
        }
	</tr>

	<tr id="character-line-ten" class="character-line">

	</tr>

	<tr id="character-line-eleven" class="character-line">
        <td class="character-data" id="R-line-toggle-data">
            <InputCheckbox Value='@lineConsonantsState(letters, 6)' ValueExpression='() => letters.ConsonantsLineLookup[6]' ValueChanged='(bool c) => toggleConsonantsLine(letters, c, 6)' id="R-line-toggle-input" class="toggle-input special-toggle-input" style="display: none;" />
            <label for="R-line-toggle-input" id="R-line-toggle-label" class="toggle-label special-toggle-label">R</label>
        </td>


        @{
            string[] rLine = ["RYA", "RYU", "RYO",];
            index = 0;

            foreach (string kana in letters.ConsonantsLineSetLookup[6]) {
                int i = index;
                <td class="character-data character" id="@(rLine[i])-toggle-data">
                    <input type="checkbox" name="@(rLine[i])-toggle-label" value="" checked="@characterState(kana)" id="@(rLine[i])-toggle-label" class="toggle-input character-toggle-input" style="display: none;" @onclick='() => toggleCharacter(kana)' />
                    <label for="@(rLine[i])-toggle-label" id="@(rLine[i])-toggle-label" class="toggle-label character-toggle-label">@kana</label>
                </td>

                index++;
            }
        }
	</tr>

	<tr id="character-line-twelve" class="character-line">

	</tr>

	<tr id="character-line-thirteen" class="character-line">

	</tr>
</table>
